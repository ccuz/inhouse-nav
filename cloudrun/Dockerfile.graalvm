# Stage 1: Build the native image
# Please read https://discuss.lightbend.com/t/akka-and-graal-s-native-image-tool/940/20
# and https://github.com/vmencik/akka-graal-native for akka and graal-native
FROM oracle/graalvm-ce:19.1.0 as graalvm
RUN gu install native-image
COPY build/libs/cloudrun-all.jar /home/app/server.jar
RUN mkdir -p /home/app/graalvmconfig
COPY graalvmconfig/resource-config.json /home/app/graalvmconfig/resource-config.json
COPY graalvmconfig/reflect-config.json /home/app/graalvmconfig/reflect-config.json
#COPY graalvmconfig/proxy-config.json /home/app/graalvmconfig/proxy-config.json
#COPY graalvmconfig/jni-config.json /home/app/graalvmconfig/jni-config.json
WORKDIR /home/app
# use --static to statically link glibc to prevent having to use custom alpine image with glibc
# use --report-unsupported-elements-at-runtime to detect unsupported
# use -H:ReflectionConfigurationResources=akka_reflection_config.json to declare reflection classes and method calls
# see https://e.printstacktrace.blog/graalvm-and-groovy-how-to-start/ for more parameter insights
RUN native-image --static -cp server.jar \
-H:+ReportExceptionStackTraces \
-H:ConfigurationFileDirectories=graalvmconfig/ \
--allow-incomplete-classpath \
--report-unsupported-elements-at-runtime \
--initialize-at-build-time \
--initialize-at-run-time="akka.protobuf.DescriptorProtos" \
--no-fallback \
--no-server \
--enable-url-protocols=https,http \
-H:IncludeResourceBundles=messages \
-H:Class=trainstation.guidebot.DialogFlowFunction -H:Name=dialogflow-cloudrun-native


# Stage 3: Prepare Server
FROM alpine:latest
RUN apk --no-cache add ca-certificates
EXPOSE 8080
COPY --from=graalvm /home/app/dialogflow-cloudrun-native .
ENTRYPOINT ["./dialogflow-cloudrun-native"]
