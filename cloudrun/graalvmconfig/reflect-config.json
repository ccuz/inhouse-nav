[
{
  "name":"[B"
},
{
  "name":"akka.actor.ActorCell",
  "fields":[
    {"name":"akka$actor$dungeon$Children$$_childrenRefsDoNotCallMeDirectly"}, 
    {"name":"akka$actor$dungeon$Children$$_functionRefsDoNotCallMeDirectly"}, 
    {"name":"akka$actor$dungeon$Children$$_nextNameDoNotCallMeDirectly"}, 
    {"name":"akka$actor$dungeon$Dispatch$$_mailboxDoNotCallMeDirectly"}
  ]
},
{
  "name":"akka.actor.DefaultSupervisorStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.actor.LightArrayRevolverScheduler",
  "methods":[{"name":"<init>","parameterTypes":["com.typesafe.config.Config","akka.event.LoggingAdapter","java.util.concurrent.ThreadFactory"] }]
},
{
  "name":"akka.actor.LightArrayRevolverScheduler$TaskHolder",
  "fields":[{"name":"task"}]
},
{
  "name":"akka.actor.LocalActorRefProvider",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","akka.actor.ActorSystem$Settings","akka.event.EventStream","akka.actor.DynamicAccess"] }]
},
{
  "name":"akka.actor.LocalActorRefProvider$Guardian",
  "allDeclaredConstructors":true
},
{
  "name":"akka.actor.LocalActorRefProvider$SystemGuardian",
  "allDeclaredConstructors":true
},
{
  "name":"akka.actor.Props$EmptyActor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"akka.actor.RepointableActorRef",
  "fields":[
    {"name":"_cellDoNotCallMeDirectly"}, 
    {"name":"_lookupDoNotCallMeDirectly"}
  ]
},
{
  "name":"akka.dispatch.AbstractNodeQueue",
  "fields":[{"name":"_tailDoNotCallMeDirectly"}]
},
{
  "name":"akka.dispatch.AbstractNodeQueue$Node",
  "fields":[{"name":"_nextDoNotCallMeDirectly"}]
},
{
  "name":"akka.dispatch.BoundedControlAwareMessageQueueSemantics"
},
{
  "name":"akka.dispatch.BoundedDequeBasedMessageQueueSemantics"
},
{
  "name":"akka.dispatch.BoundedMessageQueueSemantics"
},
{
  "name":"akka.dispatch.ControlAwareMessageQueueSemantics"
},
{
  "name":"akka.dispatch.DequeBasedMessageQueueSemantics"
},
{
  "name":"akka.dispatch.Mailbox",
  "fields":[
    {"name":"_statusDoNotCallMeDirectly"}, 
    {"name":"_systemQueueDoNotCallMeDirectly"}
  ]
},
{
  "name":"akka.dispatch.MessageDispatcher",
  "fields":[
    {"name":"_inhabitantsDoNotCallMeDirectly"}, 
    {"name":"_shutdownScheduleDoNotCallMeDirectly"}
  ]
},
{
  "name":"akka.dispatch.MultipleConsumerSemantics"
},
{
  "name":"akka.dispatch.UnboundedControlAwareMessageQueueSemantics"
},
{
  "name":"akka.dispatch.UnboundedDequeBasedMessageQueueSemantics"
},
{
  "name":"akka.dispatch.UnboundedMailbox",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem$Settings","com.typesafe.config.Config"] }]
},
{
  "name":"akka.dispatch.UnboundedMessageQueueSemantics"
},
{
  "name":"akka.dispatch.forkjoin.ForkJoinPool",
  "fields":[
    {"name":"ctl"}, 
    {"name":"indexSeed"}, 
    {"name":"plock"}, 
    {"name":"stealCount"}
  ]
},
{
  "name":"akka.dispatch.forkjoin.ForkJoinPool$WorkQueue",
  "fields":[{"name":"qlock"}]
},
{
  "name":"akka.dispatch.forkjoin.ForkJoinTask",
  "fields":[{"name":"status"}]
},
{
  "name":"akka.event.DeadLetterListener",
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"<init>","parameterTypes":[] }
  ]
},
{
  "name":"akka.event.DefaultLoggingFilter",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem$Settings","akka.event.EventStream"] }]
},
{
  "name":"akka.event.EventStreamUnsubscriber",
  "allDeclaredConstructors":true
},
{
  "name":"akka.event.LoggerMailboxType",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem$Settings","com.typesafe.config.Config"] }]
},
{
  "name":"akka.event.LoggerMessageQueueSemantics"
},
{
  "name":"akka.event.Logging$DefaultLogger",
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"<init>","parameterTypes":[] }
  ]
},
{
  "name":"akka.http.impl.engine.client.PoolMasterActor",
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"<init>","parameterTypes":[] }
  ]
},
{
  "name":"akka.io.SelectionHandler",
  "allDeclaredConstructors":true
},
{
  "name":"akka.io.TcpIncomingConnection",
  "allDeclaredConstructors":true
},
{
  "name":"akka.io.TcpListener",
  "allDeclaredConstructors":true
},
{
  "name":"akka.io.TcpManager",
  "allDeclaredConstructors":true
},
{
  "name":"akka.pattern.PromiseActorRef",
  "fields":[
    {"name":"_stateDoNotCallMeDirectly"}, 
    {"name":"_watchedByDoNotCallMeDirectly"}
  ]
},
{
  "name":"akka.routing.ConsistentHashingPool",
  "methods":[{"name":"<init>","parameterTypes":["com.typesafe.config.Config"] }]
},
{
  "name":"akka.routing.RoundRobinPool",
  "methods":[{"name":"<init>","parameterTypes":["com.typesafe.config.Config"] }]
},
{
  "name":"akka.routing.RoutedActorCell$RouterActorCreator",
  "allDeclaredConstructors":true
},
{
  "name":"akka.serialization.ByteArraySerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.serialization.JavaSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"akka.serialization.SerializationExtension$",
  "fields":[{"name":"MODULE$"}]
},
{
  "name":"akka.stream.SinkRef"
},
{
  "name":"akka.stream.SourceRef"
},
{
  "name":"akka.stream.impl.streamref.StreamRefsProtocol"
},
{
  "name":"akka.stream.serialization.StreamRefSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]
},
{
  "name":"com.google.actions.api.impl.io.ResponseSerializer$DFHelperIntent",
  "allDeclaredFields":true
},
{
  "name":"com.google.actions.api.impl.io.ResponseSerializer$DialogflowGooglePayload",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.client.json.GenericJson",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.client.util.GenericData",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.services.actions_fulfillment.v2.model.AppRequest",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.services.actions_fulfillment.v2.model.AppResponse",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.services.actions_fulfillment.v2.model.Capability",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.actions_fulfillment.v2.model.Conversation",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.actions_fulfillment.v2.model.ExpectedInput",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.services.actions_fulfillment.v2.model.ExpectedIntent",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.services.actions_fulfillment.v2.model.Input",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.services.actions_fulfillment.v2.model.InputPrompt",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.services.actions_fulfillment.v2.model.RawInput",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.services.actions_fulfillment.v2.model.RichResponse",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.actions_fulfillment.v2.model.SimpleResponse",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.actions_fulfillment.v2.model.Surface",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.services.actions_fulfillment.v2.model.User",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.services.dialogflow_fulfillment.v2.model.Context",
  "allDeclaredFields":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"<init>","parameterTypes":[] }
  ]
},
{
  "name":"com.google.api.services.dialogflow_fulfillment.v2.model.Intent",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.dialogflow_fulfillment.v2.model.IntentMessage",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.google.api.services.dialogflow_fulfillment.v2.model.OriginalDetectIntentRequest",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.services.dialogflow_fulfillment.v2.model.QueryResult",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.services.dialogflow_fulfillment.v2.model.WebhookRequest",
  "allDeclaredFields":true
},
{
  "name":"com.google.api.services.dialogflow_fulfillment.v2.model.WebhookResponse",
  "allDeclaredFields":true
},
{
  "name":"com.google.gson.internal.LinkedTreeMap",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.typesafe.sslconfig.ssl.NoopHostnameVerifier",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.io.Serializable"
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true
},
{
  "name":"java.lang.String",
  "fields":[{"name":"value"}]
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"parkBlocker"}]
},
{
  "name":"java.util.AbstractMap",
  "allDeclaredFields":true
},
{
  "name":"java.util.ArrayList",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.HashMap",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.LinkedHashMap",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"scala.concurrent.ExecutionContext$parasitic$",
  "fields":[{"name":"MODULE$"}]
},
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "methods":[{"name":"allocateInstance","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"sun.reflect.Reflection",
  "methods":[{"name":"getCallerClass","parameterTypes":["int"] }]
},
{
  "name":"trainstation.guidebot.InHouseNavigationDialogFlowApp",
  "allDeclaredMethods":true
}
]
